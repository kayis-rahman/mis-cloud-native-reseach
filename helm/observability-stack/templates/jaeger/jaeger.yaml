{{- if .Values.jaeger.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaeger-all-in-one
  namespace: {{ include "observability-stack.namespace" . }}
  labels:
    {{- include "observability-stack.labels" . | nindent 4 }}
    app.kubernetes.io/component: jaeger
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "observability-stack.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: jaeger
  template:
    metadata:
      labels:
        {{- include "observability-stack.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: jaeger
    spec:
      containers:
      - name: jaeger
        image: "{{ .Values.jaeger.image.repository }}:{{ .Values.jaeger.image.tag }}"
        imagePullPolicy: {{ .Values.jaeger.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.jaeger.service.uiPort }}
          name: ui
        - containerPort: {{ .Values.jaeger.service.collectorHttpPort }}
          name: collector-http
        - containerPort: {{ .Values.jaeger.service.collectorGrpcPort }}
          name: collector-grpc
        - containerPort: {{ .Values.jaeger.service.agentUdpPort }}
          name: agent-udp
        - containerPort: {{ .Values.jaeger.service.agentUdpCompactPort }}
          name: agent-compact
        env:
        - name: COLLECTOR_OTLP_ENABLED
          value: "true"
        - name: SPAN_STORAGE_TYPE
          value: "{{ .Values.jaeger.config.storageType }}"
        - name: JAEGER_AGENT_PORT
          value: "{{ .Values.jaeger.service.agentUdpPort }}"
        - name: JAEGER_AGENT_HOST
          value: "localhost"
        - name: JAEGER_REPORTER_LOG_SPANS
          value: "false"
        - name: JAEGER_SAMPLER_TYPE
          value: "{{ .Values.jaeger.config.samplerType }}"
        - name: JAEGER_SAMPLER_PARAM
          value: "{{ .Values.jaeger.config.samplerParam }}"
        resources:
          {{- toYaml .Values.jaeger.resources | nindent 10 }}
        readinessProbe:
          httpGet:
            path: /
            port: ui
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /
            port: ui
          initialDelaySeconds: 30
          periodSeconds: 10
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: jaeger-query-service
  namespace: {{ include "observability-stack.namespace" . }}
  labels:
    {{- include "observability-stack.labels" . | nindent 4 }}
    app.kubernetes.io/component: jaeger
  {{- with .Values.jaeger.service.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  type: {{ .Values.jaeger.service.type }}
  ports:
  - port: {{ .Values.jaeger.service.uiPort }}
    targetPort: {{ .Values.jaeger.service.uiPort }}
    protocol: TCP
    name: ui
  selector:
    {{- include "observability-stack.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: jaeger
---
apiVersion: v1
kind: Service
metadata:
  name: jaeger-collector-service
  namespace: {{ include "observability-stack.namespace" . }}
  labels:
    {{- include "observability-stack.labels" . | nindent 4 }}
    app.kubernetes.io/component: jaeger
spec:
  type: ClusterIP
  ports:
  - port: {{ .Values.jaeger.service.collectorHttpPort }}
    targetPort: {{ .Values.jaeger.service.collectorHttpPort }}
    protocol: TCP
    name: collector-http
  - port: {{ .Values.jaeger.service.collectorGrpcPort }}
    targetPort: {{ .Values.jaeger.service.collectorGrpcPort }}
    protocol: TCP
    name: collector-grpc
  selector:
    {{- include "observability-stack.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: jaeger
---
apiVersion: v1
kind: Service
metadata:
  name: jaeger-agent-service
  namespace: {{ include "observability-stack.namespace" . }}
  labels:
    {{- include "observability-stack.labels" . | nindent 4 }}
    app.kubernetes.io/component: jaeger
spec:
  type: ClusterIP
  ports:
  - port: {{ .Values.jaeger.service.agentUdpPort }}
    targetPort: {{ .Values.jaeger.service.agentUdpPort }}
    protocol: UDP
    name: agent-udp
  - port: {{ .Values.jaeger.service.agentUdpCompactPort }}
    targetPort: {{ .Values.jaeger.service.agentUdpCompactPort }}
    protocol: UDP
    name: agent-compact
  selector:
    {{- include "observability-stack.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: jaeger
{{- end }}

