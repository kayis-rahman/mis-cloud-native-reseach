global:
  imagePullPolicy: IfNotPresent
  imageRegistry: "ghcr.io"
  # Ingress global control
  ingress:
    enabled: false
    className: ""
    hosts: []
    tls: []
    # If true, expose api-gateway at root path "/" instead of "/api-gateway"
    gatewayRoot: false

# Define microservices here
services:
  api-gateway:
    enabled: true
    name: api-gateway
    image: "api-gateway:latest"
    replicaCount: 1
    containerPort: 8080
    usesDb: false
    service:
      type: ClusterIP
      port: 8080
    resources: {}
    security:
      apiKeys: "default-key-please-change"
    env: []
    livenessProbe:
      path: /actuator/health
      initialDelaySeconds: 20
      periodSeconds: 10
    readinessProbe:
      path: /actuator/health
      initialDelaySeconds: 10
      periodSeconds: 10

  identity:
    enabled: true
    name: identity-service
    image: "identity:latest"
    replicaCount: 1
    containerPort: 9000
    usesDb: true
    service:
      type: ClusterIP
      port: 9000
    resources: {}
    env: []
    livenessProbe:
      path: /actuator/health/liveness
      initialDelaySeconds: 20
      periodSeconds: 10
    readinessProbe:
      path: /actuator/health/readiness
      initialDelaySeconds: 10
      periodSeconds: 10

  product:
    enabled: true
    name: product-service
    image: "product:latest"
    replicaCount: 1
    containerPort: 9001
    usesDb: true
    service:
      type: ClusterIP
      port: 9001
    resources: {}
    env: []
    livenessProbe:
      path: /actuator/health/liveness
      initialDelaySeconds: 20
      periodSeconds: 10
    readinessProbe:
      path: /actuator/health/readiness
      initialDelaySeconds: 10
      periodSeconds: 10

  cart:
    enabled: true
    name: cart-service
    image: "cart:latest"
    replicaCount: 1
    containerPort: 9002
    usesDb: true
    service:
      type: ClusterIP
      port: 9002
    resources: {}
    env: []
    livenessProbe:
      path: /actuator/health/liveness
      initialDelaySeconds: 20
      periodSeconds: 10
    readinessProbe:
      path: /actuator/health/readiness
      initialDelaySeconds: 10
      periodSeconds: 10

  order:
    enabled: true
    name: order-service
    image: "order:latest"
    replicaCount: 1
    containerPort: 9003
    usesDb: true
    service:
      type: ClusterIP
      port: 9003
    resources: {}
    env: []
    livenessProbe:
      path: /actuator/health/liveness
      initialDelaySeconds: 20
      periodSeconds: 10
    readinessProbe:
      path: /actuator/health/readiness
      initialDelaySeconds: 10
      periodSeconds: 10

  payment:
    enabled: true
    name: payment-service
    image: "payment:latest"
    replicaCount: 1
    containerPort: 9004
    usesDb: true
    service:
      type: ClusterIP
      port: 9004
    resources: {}
    env: []
    livenessProbe:
      path: /actuator/health/liveness
      initialDelaySeconds: 20
      periodSeconds: 10
    readinessProbe:
      path: /actuator/health/readiness
      initialDelaySeconds: 10
      periodSeconds: 10
