{{- $global := .Values.global -}}
{{- range $key, $svc := .Values.services }}
{{- if $svc.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ printf "%s-%s" $.Release.Name $key | trunc 63 | trimSuffix "-" }}
  labels:
    app.kubernetes.io/instance: {{ $.Release.Name }}
    app.kubernetes.io/component: {{ $key }}
spec:
  replicas: {{ $svc.replicaCount | default 1 }}
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ $.Release.Name }}
      app.kubernetes.io/component: {{ $key }}
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: {{ $.Release.Name }}
        app.kubernetes.io/component: {{ $key }}
      {{- if $svc.annotations }}
      annotations:
        {{- range $annotationKey, $annotationValue := $svc.annotations }}
        {{ $annotationKey }}: {{ $annotationValue | quote }}
        {{- end }}
      {{- end }}
    spec:
      containers:
        - name: {{ $key }}
          image: {{ $svc.image }}
          imagePullPolicy: {{ $global.imagePullPolicy | default "IfNotPresent" }}
          ports:
            - name: http
              containerPort: {{ $svc.containerPort | default 8080 }}
              protocol: TCP
          {{- if $svc.usesDb }}
          envFrom:
            - secretRef:
                name: {{ printf "db-%s" $key }}
          {{- end }}
          env:
            # Service-specific environment variables
            {{- range $svc.env }}
            - name: {{ .name }}
              {{- if .value }}
              value: {{ .value | quote }}
              {{- else if .valueFrom }}
              valueFrom:
                {{- toYaml .valueFrom | nindent 16 }}
              {{- end }}
            {{- end }}
            # Basic service configuration
            - name: SPRING_APPLICATION_NAME
              value: "{{ $key }}"
          {{- if $svc.resources }}
          resources:
            {{- toYaml $svc.resources | nindent 12 }}
          {{- end }}
          {{- if $svc.readinessProbe }}
          readinessProbe:
            httpGet:
              path: {{ $svc.readinessProbe.path | default "/actuator/health" }}
              port: http
            initialDelaySeconds: {{ $svc.readinessProbe.initialDelaySeconds | default 10 }}
            periodSeconds: {{ $svc.readinessProbe.periodSeconds | default 10 }}
            {{- if $svc.readinessProbe.timeoutSeconds }}
            timeoutSeconds: {{ $svc.readinessProbe.timeoutSeconds }}
            {{- end }}
            {{- if $svc.readinessProbe.failureThreshold }}
            failureThreshold: {{ $svc.readinessProbe.failureThreshold }}
            {{- end }}
          {{- end }}
          {{- if $svc.livenessProbe }}
          livenessProbe:
            httpGet:
              path: {{ $svc.livenessProbe.path | default "/actuator/health" }}
              port: http
            initialDelaySeconds: {{ $svc.livenessProbe.initialDelaySeconds | default 20 }}
            periodSeconds: {{ $svc.livenessProbe.periodSeconds | default 10 }}
            {{- if $svc.livenessProbe.timeoutSeconds }}
            timeoutSeconds: {{ $svc.livenessProbe.timeoutSeconds }}
            {{- end }}
            {{- if $svc.livenessProbe.failureThreshold }}
            failureThreshold: {{ $svc.livenessProbe.failureThreshold }}
            {{- end }}
          {{- end }}
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 1000
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: false
---
{{- end }}
{{- end }}
