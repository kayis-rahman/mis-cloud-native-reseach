{{- $global := .Values.global -}}
{{- if $global.ingress.enabled }}
{{- range $key, $svc := .Values.services }}
{{- if $svc.enabled }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ printf "%s-%s" $.Release.Name $key | trunc 63 | trimSuffix "-" }}
  {{- if $global.ingress.className }}
  annotations:
    kubernetes.io/ingress.class: {{ $global.ingress.className | quote }}
  {{- end }}
spec:
  {{- if $global.ingress.className }}
  ingressClassName: {{ $global.ingress.className | quote }}
  {{- end }}
  {{- if $global.ingress.hosts | and (gt (len $global.ingress.hosts) 0) }}
  rules:
    {{- range $host := $global.ingress.hosts }}
    - host: {{ $host | quote }}
      http:
        paths:
          - path: {{ if and (eq $key "api-gateway") ($global.ingress.gatewayRoot) }}/{{ else }}/{{ $key }}{{ end }}
            pathType: Prefix
            backend:
              service:
                name: {{ printf "%s-%s" $.Release.Name $key | trunc 63 | trimSuffix "-" }}
                port:
                  number: {{ $svc.service.port | default 80 }}
    {{- end }}
  {{- else }}
  defaultBackend:
    service:
      name: {{ printf "%s-%s" $.Release.Name $key | trunc 63 | trimSuffix "-" }}
      port:
        number: {{ $svc.service.port | default 80 }}
  {{- end }}
  {{- if $global.ingress.tls }}
  tls:
    {{- toYaml $global.ingress.tls | nindent 4 }}
  {{- end }}
---
{{- end }}
{{- end }}
{{- end }}
