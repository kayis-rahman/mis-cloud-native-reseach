# Development Environment Values - Minimal Resources
global:
  environment: "development"
  imageRegistry: "ghcr.io"
  imagePullPolicy: Always
  gcp:
    projectId: "mis-cloud-native-research"
    region: "us-central1"

# Override API Gateway configuration for development
services:
  api-gateway:
    replicaCount: 1
    resources:
      requests:
        memory: "256Mi"
        cpu: "100m"
      limits:
        memory: "512Mi"
        cpu: "200m"
    security:
      apiKeys: "dev-api-key-12345"
      headerName: "X-API-Key"
    rateLimit:
      replenishRate: 5
      burstCapacity: 10
    env:
      - name: SPRING_PROFILES_ACTIVE
        value: "development"
      - name: LOGGING_LEVEL_COM_SPARKAGE
        value: "DEBUG"
      - name: LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_CLOUD_GATEWAY
        value: "DEBUG"
      # Micrometer/Prometheus exposure
      - name: MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE
        value: "health,info,prometheus"
      - name: MANAGEMENT_ENDPOINT_PROMETHEUS_ENABLED
        value: "true"
      - name: MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED
        value: "true"
      # Downward API for namespace (used in OTEL resource attributes)
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            fieldPath: metadata.namespace
      # Grafana Cloud credentials from secret
      - name: GRAFANA_CLOUD_STACK_ID
        valueFrom:
          secretKeyRef:
            name: grafana-cloud-credentials
            key: stack_id
      - name: GRAFANA_CLOUD_API_KEY
        valueFrom:
          secretKeyRef:
            name: grafana-cloud-credentials
            key: api_key
      # OpenTelemetry tracing to Grafana Tempo (via Cloud OTLP gateway)
      - name: OTEL_SERVICE_NAME
        value: "api-gateway"
      - name: OTEL_RESOURCE_ATTRIBUTES
        value: "service.name=api-gateway,service.namespace=$(POD_NAMESPACE),deployment.environment=development"
      - name: OTEL_TRACES_EXPORTER
        value: "otlp"
      - name: OTEL_EXPORTER_OTLP_PROTOCOL
        value: "http/protobuf"
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: "https://otlp-gateway-us.grafana.net"
      - name: OTEL_EXPORTER_OTLP_HEADERS
        value: "Authorization=Bearer $(GRAFANA_CLOUD_API_KEY),X-Scope-OrgID=$(GRAFANA_CLOUD_STACK_ID)"
      - name: OTEL_PROPAGATORS
        value: "tracecontext,baggage"
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/path: "/actuator/prometheus"
      prometheus.io/port: "8080"

  # Enable only essential services for development
  identity:
    enabled: true
    replicaCount: 1
    resources:
      requests:
        memory: "128Mi"
        cpu: "50m"
      limits:
        memory: "256Mi"
        cpu: "100m"

  product:
    enabled: true
    replicaCount: 1
    resources:
      requests:
        memory: "128Mi"
        cpu: "50m"
      limits:
        memory: "256Mi"
        cpu: "100m"

  cart:
    enabled: false  # Disable for development

  order:
    enabled: false  # Disable for development

  payment:
    enabled: false  # Disable for development

