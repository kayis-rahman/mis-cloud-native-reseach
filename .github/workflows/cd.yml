name: CD Pipeline

on:
  push:
    branches: [ main ]
    paths:
      - 'services/**'
      - 'helm/**'
      - 'terraform/**'
      - '.github/workflows/**'
      - 'scripts/**'
  workflow_run:
    workflows: ["CI Pipeline"]
    types:
      - completed
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  GHCR_OWNER: ${{ github.repository_owner }}
  GHCR_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GCP_PROJECT: ${{ secrets.GCP_PROJECT }}
  GKE_CLUSTER: mis-cloud-native-gke
  GKE_ZONE: us-central1-a
  GCP_REGION: us-central1

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  deploy-to-gke:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    environment: production

    steps:
    - uses: actions/checkout@v3

    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'
        project_id: '${{ secrets.GCP_PROJECT }}'

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'

    - name: 'Get GKE credentials'
      run: |-
        gcloud container clusters get-credentials "$GKE_CLUSTER" --region "$GCP_REGION" --project "$GCP_PROJECT"

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
        aws-region: us-east-1

    - name: Initialize Terraform
      working-directory: ./terraform
      run: terraform init
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}

    - name: Apply Terraform Changes
      working-directory: ./terraform
      run: |
        terraform apply -auto-approve \
          -var="gcp_project_id=${{ secrets.GCP_PROJECT }}" \
          -var="project_name=mis-cloud-native" \
          -var="enable_deletion_protection=true"
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}

    - name: Deploy Services to GKE
      run: |
        chmod +x ./scripts/deploy_all_services.sh
        ./scripts/deploy_all_services.sh
      env:
        KUBECONFIG: /tmp/kubeconfig
        GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}
