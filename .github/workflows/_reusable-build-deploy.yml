name: _Reusable - Build and Deploy Service

on:
  workflow_call:
    inputs:
      service:
        description: Service name (folder under services/)
        required: true
        type: string
      image_repository:
        description: Full image repository (e.g., ghcr.io/OWNER/cart)
        required: true
        type: string
      dockerfile:
        description: Optional dockerfile path
        required: false
        type: string
        default: Dockerfile

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    env:
      AWS_REGION: ${{ secrets.AWS_REGION || 'us-east-1' }}
      IMAGE: ${{ inputs.image_repository }}
      SERVICE: ${{ inputs.service }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK (for Maven build)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build service with Maven
        working-directory: services/${{ inputs.service }}
        run: mvn -B -DskipTests package

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract short SHA
        id: vars
        run: echo "sha=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: services/${{ inputs.service }}
          file: services/${{ inputs.service }}/${{ inputs.dockerfile }}
          push: true
          tags: |
            ${{ env.IMAGE }}:sha-${{ steps.vars.outputs.sha }}
            ${{ env.IMAGE }}:latest

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install kubectl and helm
        run: |
          curl -sSL -o kubectl https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
          chmod +x kubectl && sudo mv kubectl /usr/local/bin/
          curl -fsSL https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name mis-cloud-native-eks --region ${{ env.AWS_REGION }}

      - name: Helm upgrade service in umbrella chart
        run: |
          helm upgrade --install mis ./helm/mis-cloud-native \
            --set services.${{ env.SERVICE }}.enabled=true \
            --set services.${{ env.SERVICE }}.image=${{ env.IMAGE }}:sha-${{ steps.vars.outputs.sha }}
