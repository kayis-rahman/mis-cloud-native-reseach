# Kubernetes and Observability Profile Configuration for Payment Service

spring:
  application:
    name: ${SPRING_APPLICATION_NAME:payment-service}

  # Database Configuration (will be overridden by secrets)
  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:5432/paymentdb}
    username: ${DB_USERNAME:payment_user}
    password: ${DB_PASSWORD:payment_pass}
    driver-class-name: org.postgresql.Driver

  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

# Management and Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: ${MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE:health,info,metrics,prometheus}
  endpoint:
    metrics:
      enabled: ${MANAGEMENT_ENDPOINT_METRICS_ENABLED:true}
    prometheus:
      enabled: ${MANAGEMENT_ENDPOINT_PROMETHEUS_ENABLED:true}
    health:
      enabled: true
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: ${MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED:true}

# OpenTracing Jaeger Configuration
opentracing:
  jaeger:
    service-name: ${OPENTRACING_JAEGER_SERVICE_NAME:payment-service}
    sampler-type: ${OPENTRACING_JAEGER_SAMPLER_TYPE:const}
    sampler-param: ${OPENTRACING_JAEGER_SAMPLER_PARAM:1}
    log-spans: false
    enable-b3-propagation: true
    udp-sender:
      host: ${JAEGER_AGENT_HOST:jaeger-agent-service.observability.svc.cluster.local}
      port: ${JAEGER_AGENT_PORT:6831}

# Logging Configuration
logging:
  level:
    com.sparkage: ${LOGGING_LEVEL_COM_SPARKAGE:DEBUG}
